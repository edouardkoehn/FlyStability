[tool.poetry]
name = "flybrain"#name of your module
version = "0.0.1"#version of your module
description = "Flystability project"#description of your modeÃ©l
authors = ["Edouard Koehn"]
license = "MIT License"

# Main dependencies
[tool.poetry.dependencies]
python = ">=3.12,<=3.13"
torch = "^2.5.1"
numpy = "^2.1.3"
matplotlib = "^3.9.2"
seaborn = "^0.13.2"
click = "^8.1.7"
sns = "^0.1"
scikit-learn = "^1.6.0"


[tool.poetry.dev-dependencies]
jupyter = "^1.0.0"
pytest = "^8.3.3"
black = "^21.12b0"
pre-commit = "^2.17.0"
flake8 = "^4.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | \.env
  | build
  | dist
  | \.mypy_cache
)\
'''

# Scripts of your module
[tool.poetry.scripts]
lyapu_convergence="flybrain.workflows:workflow_lyapunov_convergence.run_convergence_lyapunov"
transition_2_chaos = "flybrain.workflows:workflow_trans2chaos.find_transition_2_chaos"
spectrum = "flybrain.workflows:workflow_spectrum_characterisation.spectrum_characterization"
train_rd_model = "flybrain.workflows:workflow_RD_RNN.run_training_RD_RNN"
train_rd_model_fixed_param = "flybrain.workflows:workflow_RD_RNN_fixed_param.run_training_RD_RNN_fixed_param"
train_flybrain_full = "flybrain.workflows:workflow_flybrain_RNN.run_training_flybrain_RNN"
train_flybrain_pop="flybrain.workflows:workflow_flybrain_RNN_cell.run_training_flybrain_pop"
grad="flybrain.workflows:workflow_grad_characterisation.grad_characterization"
